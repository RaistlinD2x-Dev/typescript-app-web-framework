{"version":3,"sources":["src/models/User.ts","src/index.ts"],"names":[],"mappings":";;;;;;ACAA,IAAA,MAAA,GAAA,OAAA,CAAA,eAAA,CAAA;ADOA,IAAA,IAAA;ACLA,ADKA,ICLM,IAAI,GAAG,IAAI,MAAA,CAAA,IAAJ,CAAS;AAAC,ADKvB,ECLuB,IAAI,EAAC,IDK5B,GCLsB;AAAe,ADQjC,ECRiC,GAAG,EAAC,IDQrC,IAAA,CAAoB,IAApB,EAAmC;ACRjB,ADQE,CCRX,CAAb,ODQwB,IAAA,GAAA,IAAA;ACNxB,ADII,ICJA,CAAC,GAAL,CAAS,ADIL,MAAA,GAAwC,EAAxC;ACJM,ADMiC,ECNjC,IAAI,EAAE,OAAP;AAAgB,EAAA,GAAG,EAAC;AAApB,ADQL,CCRJ,CDQI,ECPJ,EDOI,CAAA,SAAA,CAAA,GAAA,GAAA,UAAI,QAAJ,EAAoB;ACNxB,ADOQ,WAAO,KAAK,IAAL,CAAU,QAAV,CAAP;ACLR,ADMK,GAFD;ACHJ;ADOI,EAAA,IAAA,CAAA,SAAA,CAAA,GAAA,GAAA,UAAI,MAAJ,EAAqB;ACLzB,ADMQ,ICNJ,ADMI,CCNH,EAAL,CAAQ,EDMM,CAAC,KCNf,CDMQ,CCNU,ADMI,KAAK,IAAnB,EAAyB,CCNf,KDMV;ACLJ,ADMC,ECND,CDIA,MCJO,CAAC,GAAR,CAAY,WAAZ;AACH,CAFD;AAIA,ADKI,EAAA,ECLA,CAAC,CDKD,CCLJ,ADKI,CCLI,QAAR,ADKI,CAAA,CCLc,CDKd,GAAA,QCLc,EDKX,SAAH,EAAsB,QAAtB,EAAwC;ACJxC,ADKI,ECLJ,MDKU,CCLH,CAAC,GAAR,CAAY,EDKM,GAAG,KAAK,CCL1B,KDKqB,CAAY,SAAZ,KAA0B,EAA3C;ACJP,ADKO,CCPR,GDOQ,QAAQ,CAAC,IAAT,CAAc,QAAd;ACHR,ADIQ,ICJJ,CAAC,EAAL,CAAQ,CDIK,KCJb,CDIQ,CCJQ,ADII,SAAZ,GCJQ,CDIiB,QAAzB;ACHJ,ADIC,ECJD,CDAA,MCAO,CAAC,GAAR,CAAY,oBAAZ;AACH,CAFD;AAIA,ADGI,EAAA,ECHA,CAAC,CDGD,CAAA,KCHJ,CAAa,GDGT,CAAA,ICHJ,GDGI,GAAA,UAAQ,SAAR,EAAyB;ACF7B,ADGQ,ICHJ,CAAC,GDGS,ICHd,CAAa,GDGS,GCHtB,ADGyB,KAAK,MAAL,CAAY,SAAZ,CAAjB;ACFR,IAAI,CAAC,OAAL,CAAa,kBAAb;AACA,ADGQ,OCHD,CAAC,ADGG,CAAC,ECHZ,CAAY,IAAZ,CDGW,IAAa,QAAQ,CAAC,MAAT,KAAoB,CAApC,EAAuC;AACnC;AACH;;AAED,IAAA,QAAQ,CAAC,OAAT,CAAiB,UAAA,QAAA,EAAQ;AACrB,MAAA,QAAQ;AACX,KAFD;AAGH,GAVD;;AAWJ,SAAA,IAAA;AA9BA,CAAA,EAAA;;AAAa,OAAA,CAAA,IAAA,GAAA,IAAA","file":"src.f10117fe.js","sourceRoot":"..","sourcesContent":["interface UserProps {\r\n    name?:string; \r\n    age?:number;\r\n}\r\n\r\ntype Callback = () => void;\r\n\r\nexport class User {\r\n    events: { [key: string]: Callback[] } = {};\r\n\r\n    constructor(private data: UserProps) {}\r\n\r\n    get(propName: string): (string | number) {\r\n        return this.data[propName];\r\n    }\r\n\r\n    set(update: UserProps): void {\r\n        Object.assign(this.data, update)\r\n    }\r\n\r\n    on(eventName: string, callback: Callback): void {\r\n        const handlers = this.events[eventName] || [];\r\n        handlers.push(callback);\r\n        this.events[eventName] = handlers;\r\n    }\r\n\r\n    trigger(eventName: string): void {\r\n        const handlers = this.events[eventName];\r\n\r\n        if(!handlers || handlers.length === 0) {\r\n            return;\r\n        }\r\n\r\n        handlers.forEach(callback => {\r\n            callback();\r\n        })\r\n    }\r\n}","import { User } from './models/User'\r\n\r\nconst user = new User({name:'Jesse', age:20});\r\n\r\nuser.set({name: 'Jamie', age:30});\r\n// user.set({name: 'Odin'});\r\n// user.set({age: 45});\r\n\r\n// console.log(user.get('name'));\r\n// console.log(user.get('age'));\r\n\r\nuser.on('change', () => {\r\n    console.log('Change #1');\r\n})\r\n\r\nuser.on('change', () => {\r\n    console.log('Change #2')\r\n})\r\n\r\nuser.on('save', () => {\r\n    console.log('Save was triggered');\r\n})\r\n\r\nuser.trigger('change');\r\nuser.trigger('save');\r\nuser.trigger('thisisnotanevent')\r\nconsole.log(user);"]}